cat(com[,i],"\n")
}
library(ggplot2,ggmap)
setwd("Users/jihoonan/Desktop")
setwd("/Users/jihoonan/Desktop")
pwd
subway=read.csv(("subway.csv"))
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,encoding = "UTF-8")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,unique=FALSE,encoding = "UTF-8")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,encoding = "UTF-8")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileencoding = "euc-kr")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
subway
str(subway)
subway.new=subset(subway$호선명="1호선"|"2호선"|"3호선"|"4호선"|"5호선"|"6호선"|"7호선"|"8호선")
subway.new=subset(subway$호선명=="1호선"|"2호선"|"3호선"|"4호선"|"5호선"|"6호선"|"7호선"|"8호선")
subway.new=subset(subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선","7호선","8호선"))
subway.new=subset(subway$호선명==("1호선","2호선","3호선","4호선","5호선","6호선","7호선","8호선"))
subway.new=subset(subway,subway$호선명=="1호선"|"2호선"|"3호선","4호선","5호선","6호선","7호선","8호선"))
subway.new=subset(subway,subway$호선명=="1호선"|"2호선"|"3호선"|"4호선"|"5호선"|"6호선"|"7호선"|"8호선")
subway.new=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선","7호선",
subway.new$호선명
table(subway.new$호선명)
colnum(subway.new$호선명)
colnum(subway.new$호선명)
str(subway.new)#$호선명
subway.new=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선","7호선",
subway.new=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선","7호선",
"8호선"))
str(subway.new)#$호선명
subway.new=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선","7호선","8호선"))
subway.new=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선",
"5호선","6호선","7호선","8호선"))
subway.new=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선",
"5호선","6호선","7호선","8호선"))
subway.new=subset(subway,subway$호선명==c("1호선")),#"2호선","3호선","4호선",
#"5호선","6호선","7호선","8호선"))
str(subway.new)#$호선명
subway.new=subset(subway,subway$호선명==c("1호선"))#"2호선","3호선","4호선",
#"5호선","6호선","7호선","8호선"))
str(subway.new)#$호선명
View(subway.new)
View(subway.new)
library(ggplot2,ggmap)
setwd("/Users/jihoonan/Desktop")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
str(subway)
subway.new1=subset(subway,subway$호선명==c("1호선","2호선"))
str(subway.new)#$호선명
View(subway.new1)
subway.new1=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선"))
View(subway.new1)
str(subway.new)#$호선명
subway.new1=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선"))
str(subway.new)#$호선명
str(subway.new1)#$호선명
table(subway.new1$호선명)
subway.new1=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선","7호선","8호선"))
subway.new1=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선"))
table(subway.new1$호선명)
subway.new1=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선","7호선"))
subway.new1=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선"))
table(subway.new1$호선명)
subway.new2=subset(subway,subway$호선명==c("7호선","8호선"))
subway.new=merge(subway.new1,subway.new2)
subway.new
subway.new=rbind(subway.new1,subway.new2)
View(subway.new)
pwd
getwd()
subway_add=read.csv("subwaystationadd.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
subway.new$호선명
for( i in 1:nrow(subway.new)){
if(subway.new$호선명)
}
subway.new$호선명
for( i in 1:nrow(subway.new)){
if(subway.new$호선명)
}
subway.new$호선명
subway.new$호선명
class(subway_add$호선[1])
for( i in 1:nrow(subway.new)){
if(subway.new$호선명[i]=="1호선"){
subway.new$호선명[i]=1
}
if(subway.new$호선명[i]=="2호선"){
subway.new$호선명[i]=2
}
if(subway.new$호선명[i]=="3호선"){
subway.new$호선명[i]=3
}
if(subway.new$호선명[i]=="4호선"){
subway.new$호선명[i]=4
}
if(subway.new$호선명[i]=="5호선"){
subway.new$호선명[i]=5
}
if(subway.new$호선명[i]=="6호선"){
subway.new$호선명[i]=6
}
if(subway.new$호선명[i]=="7호선"){
subway.new$호선명[i]=7
}
if(subway.new$호선명[i]=="8호선"){
subway.new$호선명[i]=8
}
}
subway.new$호선명
subway.new$호선명#데이터 타입 확인
subway.new$호선명#데이터 타입 확인, 변경 완료
subway_final=merge(subway.new,subway_add,by.x=c("호선명","지하철역"),
by.y=c("호선","역명"),)
View(subway_final)
View(subway_final$도로명.주소)
str(subway_final)
summary(subway_final)
ncol(subway_final)
col_info(subway_final)
col(subway_final)
save(subway_final,"subway_file_merge")
save(subway_final,file="subway_file_merge") #save
save(subway_final,file="subway_file_merge.csv") #save final
save(subway_final,file="subway_file_merge.csv") #save final
save(subway_final,file="subway_file_merge.csv") #save final
subway.new$호선명#데이터 타입 확인, 변경 완료
getwd()
setwd("/Users/jihoonan/Desktop/subway")
subway.new$호선명#데이터 타입 확인, 변경 완료
getwd()
subway_final=merge(subway.new,subway_add,by.x=c("호선명","지하철역"),
by.y=c("호선","역명"),) #기준col 중심으로 merge
save(subway_final,file="subway_file_merge.csv") #save final
subway_final
library(ggplot2,ggmap)
setwd("/Users/jihoonan/Desktop/subway")
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
subway
getwd()
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
subway
str(subway)
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "UTF-8")
subway_final
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "UTF-8")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "UTF-8")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
library(devtools)
# 패키지를 로드합니다.
install_github("plgrmr/readAny", force = TRUE)
library(readAny)
library(readr)
library(readAny)
read.any("http://philogrammer.com/melon10_euc.csv", header = TRUE)
read.any("subway_file_merge.csv", header = TRUE)
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
read.csv.any("subway_file_merge.csv", header = TRUE)
read.csv.any <- function(text, sep = "", ...) {
encoding <- as.character(guess_encoding(text)[1,1])
setting <- as.character(tools::file_ext(text))
if(sep != "" | !(setting  %in% c("csv", "txt")) ) setting <- "custom"
separate <- list(csv = ",", txt = "\n", custom = sep)
result <- read.table(text, sep = separate[[setting]], fileEncoding = encoding, ...)
return(result)
}
read.csv.any("subway_file_merge.csv", header = TRUE)
write.csv(subway_final,file="subway_file_merge.csv",row.names = F) #save final
library(ggplot2,ggmap)
setwd("/Users/jihoonan/Desktop/subway")
getwd()
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
str(subway)
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
class(subway_final)
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "utf-8")
str(subway)
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "utf-8")
save(subway_final,file="subway_file_merge.csv",row.names = F) #save final
library(ggplot2,ggmap)
setwd("/Users/jihoonan/Desktop/subway")
getwd()
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "utf-8")
str(subway)
subway
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "utf-8")
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "utf-8")
str(subway)
write.csv(subway_final,file="subway_file_merge.csv",row.names = F) #save final
subway=read.csv("subway_file_merge.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "utf-8")
str(subway)
View(subway)
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
subway.new1=subset(subway,subway$호선명==c("1호선","2호선","3호선","4호선","5호선","6호선"))
subway.new1=subset(subway,subway$호선명=="1호선" #c("1호선","2호선","3호선","4호선","5호선","6호선"))
subway.new1=subset(subway,subway$호선명== c("1호선","2호선","3호선","4호선","5호선","6호선"))
subway.new1=subset(subway,subway$호선명== c("1호선","2호선","3호선","4호선","5호선","6호선"))
subway.new1=subset(subway,subway$호선명=="1호선") #c("1호선","2호선","3호선","4호선","5호선","6호선"))
subway.new10=subset(subway,subway$호선명==c("7호선","8호선"))
subway.new1=subset(subway,subway$호선명=="1호선")#c("1호선","2호선","3호선","4호선","5호선","6호선"))
subway.new3= subset(subway,subway$호선명=="2호선")
library(ggplot2,ggmap)
setwd("/Users/jihoonan/Desktop/subway")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
str(subway)
subway.new1=subset(subway,subway$호선명=="1호선")
subway.new2= subset(subway,subway$호선명=="2호선")
subway.new3= subset(subway,subway$호선명=="3호선")
subway.new4= subset(subway,subway$호선명=="4호선")
subway.new5= subset(subway,subway$호선명=="5호선")
subway.new6= subset(subway,subway$호선명=="6호선")
subway.new7= subset(subway,subway$호선명=="7호선")
subway.new8= subset(subway,subway$호선명=="8호선")
#c("1호선","2호선","3호선","4호선","5호선","6호선"))
data=list(subway.new1,subway.new2,subway.new3,subway.new4,subway.new5,subway.new6,
subway.new7,subway.new8)
subway.new=rbindlist(data) #1~8호선 중심으로 데이터 정리 완료
libary(data.table)
libary(Data.table)
install.packages("data.table")
libary(data.table)
libary(Data.table)
libary(data.table)
library(data.table)
subway.new=rbindlist(data) #1~8호선 중심으로 데이터 정리 완료
subway_add=read.csv("subwaystationadd.csv",header=T,stringsAsFactors = FALSE,
fileEncoding = "euc-kr") #파일 불러오기
subway.new$호선명#데이터 타입 확인
class(subway_add$호선[1]) # 데이터 타입 확인
for( i in 1:nrow(subway.new)){
if(subway.new$호선명[i]=="1호선"){
subway.new$호선명[i]=1
}
if(subway.new$호선명[i]=="2호선"){
subway.new$호선명[i]=2
}
if(subway.new$호선명[i]=="3호선"){
subway.new$호선명[i]=3
}
if(subway.new$호선명[i]=="4호선"){
subway.new$호선명[i]=4
}
if(subway.new$호선명[i]=="5호선"){
subway.new$호선명[i]=5
}
if(subway.new$호선명[i]=="6호선"){
subway.new$호선명[i]=6
}
if(subway.new$호선명[i]=="7호선"){
subway.new$호선명[i]=7
}
if(subway.new$호선명[i]=="8호선"){
subway.new$호선명[i]=8
}
}
subway.new$호선명#데이터 타입 확인, 변경 완료
subway_final=merge(subway.new,subway_add,by.x=c("호선명","지하철역"),
by.y=c("호선","역명"),) #기준col 중심으로 merge
subway.new$호선명#데이터 타입 확인, 변경 완료
subway_final=merge(subway.new,subway_add,by.x=c("호선명","지하철역"),
by.y=c("호선","역명"),) #기준col 중심으로 merge
subway.new$호선명#데이터 타입 확인, 변경 완료
subway_final=merge(subway.new,subway_add,by.x=c("호선명","지하철역"),
by.y=c("호선","역명"),) #기준col 중심으로 merge
subway.new$호선명#데
subway.new$호선명
subway.new
subway_final=merge(subway.new,subway_add,by.x=c("호선명","지하철역"),
by.y=c("호선","역명"),) #기준col 중심으로 merge
class(subway_final)
for( i in 1:nrow(subway.new)){
if(subway.new$호선명[i]=="1호선"){
subway.new$호선명[i]=1
}
if(subway.new$호선명[i]=="2호선"){
subway.new$호선명[i]=2
}
if(subway.new$호선명[i]=="3호선"){
subway.new$호선명[i]=3
}
if(subway.new$호선명[i]=="4호선"){
subway.new$호선명[i]=4
}
if(subway.new$호선명[i]=="5호선"){
subway.new$호선명[i]=5
}
if(subway.new$호선명[i]=="6호선"){
subway.new$호선명[i]=6
}
if(subway.new$호선명[i]=="7호선"){
subway.new$호선명[i]=7
}
if(subway.new$호선명[i]=="8호선"){
subway.new$호선명[i]=8
}
}
subway.new
class(subway_add$호선[1])
for( i in 1:nrow(subway.new)){
if(subway.new$호선명[i]=="1호선"){
subway.new$호선명[i]=1
}
if(subway.new$호선명[i]=="2호선"){
subway.new$호선명[i]=2
}
if(subway.new$호선명[i]=="3호선"){
subway.new$호선명[i]=3
}
if(subway.new$호선명[i]=="4호선"){
subway.new$호선명[i]=4
}
if(subway.new$호선명[i]=="5호선"){
subway.new$호선명[i]=5
}
if(subway.new$호선명[i]=="6호선"){
subway.new$호선명[i]=6
}
if(subway.new$호선명[i]=="7호선"){
subway.new$호선명[i]=7
}
if(subway.new$호선명[i]=="8호선"){
subway.new$호선명[i]=8
}
}
subway.new$호선명#데이터 타입 확인, 변경 완료
subway_final=merge(subway.new,subway_add,by.x=c("호선명","지하철역"),
by.y=c("호선","역명"),) #기준col 중심으로 merge
subway.new$호선명#데이터 타입 확인, 변경 완료
subway_final=merge(subway.new,subway_add,by.x=c("호선명","지하철역"),
by.y=c("호선","역명"),) #기준col 중심으로 merge
subway.new$호선명#데이터 타입 확인, 변경 완료
head(subway.new)
head(subway_add)
names(subway.new)
names(subway.new)[2]
head(subway_add)
names(subway.new)[2]
names(subway.new)[2]="호선"
subway.new$호선명#데이터 타입 확인, 변경 완료
head(subway.new)
head(subway_add)
names(subway.new)[3]="지하철역"
subway.new$호선명#데이터 타입 확인, 변경 완료
head(subway.new)
subway_final=merge(subway.new,subway_add,by=c("호선","지하철역")) #기준col 중심으로 merge
subway.new
head(subway.new)
head(subway_add)
subway_final=merge(subway.new,subway_add,by=c("호선","지하철역")) #기준col 중심으로 merge
subway_final=merge(subway.new,subway_add,by="호선") #기준col 중심으로 merge
subway_final=merge(subway.new,subway_add,by="지하철역") #기준col 중심으로 merge
head(subway.new)
View(head(subway.new))
View(head(subway_add))
subway.new$호선명#데이터 타입 확인, 변경 완료
names(subway.new)[3]="역명" #컬럼 이름 통일화
subway.new$호선명#데이터 타입 확인, 변경 완료
names(subway.new)[3]="역명" #컬럼 이름 통일화
View(head(subway.new))
subway_final=merge(subway.new,subway_add,by="호선") #기준col 중심으로 merge
for (k in 1:nrow(subway.new)){
subway.new[k,"호선"]=as.numeric(subway.new[k,"호선"])
}
subway_final=merge(subway.new,subway_add,by="호선") #기준col(호서ㄴ,역명) 중심으로 merge
subway_final=merge(subway.new,subway_add,by=c("호선","역명") #기준col(호서ㄴ,역명) 중심으로 merge
class(subway_final)
View(head(subway_final))
View((subway_final))
subway.new
View(subway.new)
subway_final=merge(subway.new,subway_add,by="역명") #기준col(호서ㄴ,역명) 중심으로 merge
subway_final=merge(subway.new,subway_add,by=c("호선","역명") #기준col(호서ㄴ,역명) 중심으로 merge
subway_final=merge(subway.new,subway_add,by=c("호선","역명",all.x=T) #기준col(호서ㄴ,역명) 중심으로 merge
subway_final=merge(subway.new,subway_add,by=c("호선","역명",all.x=T) #기준col(호서ㄴ,역명) 중심으로 merge
subway_final=merge(subway.new,subway_add,by=c("호선","역명",all.x=T) #기준col(호서ㄴ,역명) 중심으로 merge
subway_final=merge(subway.new,subway_add,by=c("호선","역명"),all.x=T)
for (k in 1:nrow(subway.new)){
subway.new[k,"호선"]=as.numeric(subway.new[k,"호선"])
}
subway_final=merge(subway.new,subway_add,by=c("호선","역명"),all.x=T)
#기준col(호선,역명) 중심으로 merge
class(subway_final)
subway.new$호선명#데이터 타입 확인, 변경 완료
names(subway.new)[3]="역명" #컬럼 이름 통일화
names(subway.new)[2]="호선"
View(subway.new)
View(head(subway_add))
for (k in 1:nrow(subway.new)){
subway.new[k,"호선"]=as.numeric(subway.new[k,"호선"])
}
subway_final=merge(subway.new,subway_add,by=c("호선","역명"),all.x=T)
#기준col(호선,역명) 중심으로 merge
View(subway_final)
View(subway_final)
View(subway_final)
#기준col(호선,역명) 중심으로 merge
class(subway_final)
library(ggplot2,ggmap)
library(data.table)
setwd("/Users/jihoonan/Desktop/subway")
subway=read.csv("subway.csv",header=T,stringsAsFactors = FALSE,fileEncoding = "euc-kr")
str(subway)
subway.new1=subset(subway,subway$호선명=="1호선")
subway.new2= subset(subway,subway$호선명=="2호선")
subway.new3= subset(subway,subway$호선명=="3호선")
subway.new4= subset(subway,subway$호선명=="4호선")
subway.new5= subset(subway,subway$호선명=="5호선")
subway.new6= subset(subway,subway$호선명=="6호선")
subway.new7= subset(subway,subway$호선명=="7호선")
subway.new8= subset(subway,subway$호선명=="8호선")
#c("1호선","2호선","3호선","4호선","5호선","6호선"))
data=list(subway.new1,subway.new2,subway.new3,subway.new4,subway.new5,subway.new6,
subway.new7,subway.new8)# 리스트로 묶기
subway.new=rbindlist(data) #1~8호선 중심으로 데이터 정리 완료
subway_add=read.csv("subwaystationadd.csv",header=T,stringsAsFactors = FALSE,
fileEncoding = "euc-kr") #파일 불러오기
subway.new$호선명#데이터 타입 확인
class(subway_add$호선[1]) # 데이터 타입 확인
for( i in 1:nrow(subway.new)){
if(subway.new$호선명[i]=="1호선"){
subway.new$호선명[i]=1
}
if(subway.new$호선명[i]=="2호선"){
subway.new$호선명[i]=2
}
if(subway.new$호선명[i]=="3호선"){
subway.new$호선명[i]=3
}
if(subway.new$호선명[i]=="4호선"){
subway.new$호선명[i]=4
}
if(subway.new$호선명[i]=="5호선"){
subway.new$호선명[i]=5
}
if(subway.new$호선명[i]=="6호선"){
subway.new$호선명[i]=6
}
if(subway.new$호선명[i]=="7호선"){
subway.new$호선명[i]=7
}
if(subway.new$호선명[i]=="8호선"){
subway.new$호선명[i]=8
}
}
subway.new$호선명#데이터 타입 확인, 변경 완료
names(subway.new)[3]="역명" #컬럼 이름 통일화
names(subway.new)[2]="호선"
View(subway.new)
View(head(subway_add))
for (k in 1:nrow(subway.new)){
subway.new[k,"호선"]=as.numeric(subway.new[k,"호선"])
}
subway_final=merge(subway.new,subway_add,by=c("호선","역명"),all.x=T)
#기준col(호선,역명) 중심으로 merge
class(subway_final)
View((subway_final))
write.csv(subway_final,file="subway_file_merge.csv",row.names = F) #save final
#data cleansing end
#subway_final_merge is final processed data
class(subway.new$호선)
for (k in 1:nrow(subway.new)){
subway.new[k,"호선"]=as.numeric(subway.new[k,"호선"])
}
class(subway.new$호선)
class(subway.add$호선)
class(subway_add$호선)
subway.new[1,"호선"]
class(subway.new[1,"호선"])
class(subway.new[1,"호선"])
class(subway.new[2,"호선"])
class(subway.new[2,2])
for (k in 1:nrow(subway.new)){
#subway.new[k,"호선"]=
as.numeric(subway.new[k,"호선"])
}
class(subway.new[2,2])
class(subway.new$호선) #타입변환완료
class(subway_add$호선)
subway.new$호선명#데이터 타입 확인, 변경 완료
names(subway.new)[3]="역명" #컬럼 이름 통일화
subway.new$호선명[1]#데이터 타입 확인, 변경 완료
subway.new$호선명[3]#데이터 타입 확인, 변경 완료
subway.new[1,"호선"]#데이터 타입 확인, 변경 완료
class(subway.new[1,"호선"])#데이터 타입 확인, 변경 완료
#subway.new[k,"호선"]=
as.numeric(subway.new$호선)
for (k in 1:nrow(subway.new)){
#subway.new[k,"호선"]=
as.numeric(subway.new$호선)
}
class(subway.new[2,2])
class(subway.new[2,2])
class(subway.new$호선)
class(subway_add$호선)
subway.new$호선
as.numeric(subway.new$호선)
subway.new$호선=as.numeric(subway.new$호선)
class(subway.new[2,2])
class(subway.new$호선)
class(subway_add$호선)
subway.new$호선=as.integer(subway.new$호선)
class(subway.new$호선)
subway_final=merge(subway.new,subway_add,by=c("호선","역명"),all.x=T)
#기준col(호선,역명) 중심으로 merge
View((subway_final))
write.csv(subway_final,file="subway_file_merge.csv",row.names = F) #save final
subway=read.csv("subway_file_merge",header = T, encoding = "UTF-8")
getwd()
subway=read.csv("subway_file_merge.csv",header = T, encoding = "UTF-8")
head(subway)
